// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bfs_bfs,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.393000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1039,HLS_SYN_LUT=989,HLS_VERSION=2022_1}" *)

module bfs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        nodes_address0,
        nodes_ce0,
        nodes_q0,
        edges_0_address0,
        edges_0_ce0,
        edges_0_q0,
        edges_0_address1,
        edges_0_ce1,
        edges_0_q1,
        edges_1_address0,
        edges_1_ce0,
        edges_1_q0,
        edges_1_address1,
        edges_1_ce1,
        edges_1_q1,
        starting_node,
        level_address0,
        level_ce0,
        level_we0,
        level_d0,
        level_q0,
        level_counts_0_address0,
        level_counts_0_ce0,
        level_counts_0_we0,
        level_counts_0_d0,
        level_counts_1_address0,
        level_counts_1_ce0,
        level_counts_1_we0,
        level_counts_1_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] nodes_address0;
output   nodes_ce0;
input  [127:0] nodes_q0;
output  [10:0] edges_0_address0;
output   edges_0_ce0;
input  [63:0] edges_0_q0;
output  [10:0] edges_0_address1;
output   edges_0_ce1;
input  [63:0] edges_0_q1;
output  [10:0] edges_1_address0;
output   edges_1_ce0;
input  [63:0] edges_1_q0;
output  [10:0] edges_1_address1;
output   edges_1_ce1;
input  [63:0] edges_1_q1;
input  [63:0] starting_node;
output  [7:0] level_address0;
output   level_ce0;
output   level_we0;
output  [7:0] level_d0;
input  [7:0] level_q0;
output  [2:0] level_counts_0_address0;
output   level_counts_0_ce0;
output   level_counts_0_we0;
output  [63:0] level_counts_0_d0;
output  [2:0] level_counts_1_address0;
output   level_counts_1_ce0;
output   level_counts_1_we0;
output  [63:0] level_counts_1_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nodes_ce0;
reg[7:0] level_address0;
reg level_ce0;
reg level_we0;
reg[7:0] level_d0;
reg[2:0] level_counts_0_address0;
reg level_counts_0_ce0;
reg level_counts_0_we0;
reg[63:0] level_counts_0_d0;
reg level_counts_1_ce0;
reg level_counts_1_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] horizon_1_reg_381;
wire    ap_CS_fsm_state2;
wire   [63:0] add_ln21_fu_239_p2;
reg   [63:0] add_ln21_reg_386;
wire   [3:0] add_ln21_cast_fu_245_p2;
reg   [3:0] add_ln21_cast_reg_392;
wire   [7:0] empty_fu_251_p2;
reg   [7:0] empty_reg_397;
wire   [8:0] n_1_fu_263_p2;
reg   [8:0] n_1_reg_405;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln24_fu_269_p1;
reg   [63:0] zext_ln24_reg_410;
wire   [0:0] icmp_ln24_fu_257_p2;
wire   [0:0] icmp_ln25_fu_321_p2;
reg   [0:0] icmp_ln25_reg_426;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_begin_fu_326_p1;
reg   [63:0] tmp_begin_reg_435;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_end_fu_331_p4;
reg   [63:0] tmp_end_reg_440;
wire   [0:0] icmp_ln28_fu_342_p2;
reg   [0:0] icmp_ln28_reg_445;
wire   [0:0] grp_bfs_Pipeline_loop_neighbors_fu_206_ap_return;
reg   [0:0] targetBlock_reg_449;
wire    ap_CS_fsm_state6;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_ap_done;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_ap_idle;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_ap_ready;
wire   [10:0] grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address0;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce0;
wire   [10:0] grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address1;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce1;
wire   [10:0] grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address0;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce0;
wire   [10:0] grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address1;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce1;
wire   [7:0] grp_bfs_Pipeline_loop_neighbors_fu_206_level_address0;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_level_ce0;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_level_we0;
wire   [7:0] grp_bfs_Pipeline_loop_neighbors_fu_206_level_d0;
wire   [63:0] grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out_ap_vld;
wire   [63:0] grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out;
wire    grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out_ap_vld;
reg   [63:0] cnt_reg_166;
reg   [63:0] ap_phi_mux_cnt_1_phi_fu_195_p6;
wire    ap_CS_fsm_state7;
reg   [8:0] n_reg_180;
wire   [63:0] select_ln28_fu_354_p3;
reg   [63:0] cnt_1_reg_191;
reg    grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg;
reg   [63:0] cnt_1_0_loc_fu_84;
reg   [63:0] cnt_2_0_loc_fu_80;
wire   [63:0] zext_ln39_fu_286_p1;
wire   [0:0] trunc_ln39_fu_274_p1;
reg   [63:0] horizon_fu_76;
wire   [0:0] and_ln39_fu_303_p2;
wire   [3:0] trunc_ln21_1_fu_235_p1;
wire   [7:0] trunc_ln21_fu_231_p1;
wire   [2:0] lshr_ln_fu_277_p4;
wire   [0:0] icmp_ln39_fu_292_p2;
wire   [0:0] icmp_ln21_fu_298_p2;
wire  signed [7:0] sext_ln25_fu_313_p0;
wire  signed [31:0] sext_ln25_fu_313_p1;
wire   [63:0] zext_ln25_fu_317_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg = 1'b0;
end

bfs_bfs_Pipeline_loop_neighbors grp_bfs_Pipeline_loop_neighbors_fu_206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start),
    .ap_done(grp_bfs_Pipeline_loop_neighbors_fu_206_ap_done),
    .ap_idle(grp_bfs_Pipeline_loop_neighbors_fu_206_ap_idle),
    .ap_ready(grp_bfs_Pipeline_loop_neighbors_fu_206_ap_ready),
    .cnt(cnt_reg_166),
    .tmp_begin(tmp_begin_reg_435),
    .tmp_end(tmp_end_reg_440),
    .edges_0_address0(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address0),
    .edges_0_ce0(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce0),
    .edges_0_q0(edges_0_q0),
    .edges_0_address1(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address1),
    .edges_0_ce1(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce1),
    .edges_0_q1(edges_0_q1),
    .edges_1_address0(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address0),
    .edges_1_ce0(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce0),
    .edges_1_q0(edges_1_q0),
    .edges_1_address1(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address1),
    .edges_1_ce1(grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce1),
    .edges_1_q1(edges_1_q1),
    .level_address0(grp_bfs_Pipeline_loop_neighbors_fu_206_level_address0),
    .level_ce0(grp_bfs_Pipeline_loop_neighbors_fu_206_level_ce0),
    .level_we0(grp_bfs_Pipeline_loop_neighbors_fu_206_level_we0),
    .level_d0(grp_bfs_Pipeline_loop_neighbors_fu_206_level_d0),
    .level_q0(level_q0),
    .empty(empty_reg_397),
    .cnt_1_0_out(grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out),
    .cnt_1_0_out_ap_vld(grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out_ap_vld),
    .cnt_2_0_out(grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out),
    .cnt_2_0_out_ap_vld(grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out_ap_vld),
    .ap_return(grp_bfs_Pipeline_loop_neighbors_fu_206_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln28_fu_342_p2 == 1'd1))) begin
            grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg <= 1'b1;
        end else if ((grp_bfs_Pipeline_loop_neighbors_fu_206_ap_ready == 1'b1)) begin
            grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (icmp_ln28_fu_342_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln25_fu_321_p2 == 1'd0)))) begin
        cnt_1_reg_191 <= cnt_reg_166;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln28_reg_445 == 1'd1) & (icmp_ln25_reg_426 == 1'd1))) begin
        cnt_1_reg_191 <= select_ln28_fu_354_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        cnt_reg_166 <= ap_phi_mux_cnt_1_phi_fu_195_p6;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cnt_reg_166 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        horizon_fu_76 <= 64'd0;
    end else if (((icmp_ln24_fu_257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln39_fu_303_p2))) begin
        horizon_fu_76 <= add_ln21_reg_386;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        n_reg_180 <= n_1_reg_405;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        n_reg_180 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln21_cast_reg_392 <= add_ln21_cast_fu_245_p2;
        add_ln21_reg_386 <= add_ln21_fu_239_p2;
        empty_reg_397 <= empty_fu_251_p2;
        horizon_1_reg_381 <= horizon_fu_76;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out_ap_vld == 1'b1))) begin
        cnt_1_0_loc_fu_84 <= grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_1_0_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out_ap_vld == 1'b1))) begin
        cnt_2_0_loc_fu_80 <= grp_bfs_Pipeline_loop_neighbors_fu_206_cnt_2_0_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln25_reg_426 <= icmp_ln25_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln28_reg_445 <= icmp_ln28_fu_342_p2;
        tmp_begin_reg_435 <= tmp_begin_fu_326_p1;
        tmp_end_reg_440 <= {{nodes_q0[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_1_reg_405 <= n_1_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        targetBlock_reg_449 <= grp_bfs_Pipeline_loop_neighbors_fu_206_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln24_reg_410[8 : 0] <= zext_ln24_fu_269_p1[8 : 0];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_bfs_Pipeline_loop_neighbors_fu_206_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((1'd0 == and_ln39_fu_303_p2) & (icmp_ln24_fu_257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln28_reg_445 == 1'd1) & (icmp_ln25_reg_426 == 1'd1))) begin
        ap_phi_mux_cnt_1_phi_fu_195_p6 = select_ln28_fu_354_p3;
    end else begin
        ap_phi_mux_cnt_1_phi_fu_195_p6 = cnt_1_reg_191;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln39_fu_303_p2) & (icmp_ln24_fu_257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        level_address0 = zext_ln24_fu_269_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_address0 = starting_node;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        level_address0 = grp_bfs_Pipeline_loop_neighbors_fu_206_level_address0;
    end else begin
        level_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        level_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        level_ce0 = grp_bfs_Pipeline_loop_neighbors_fu_206_level_ce0;
    end else begin
        level_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        level_counts_0_address0 = zext_ln39_fu_286_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_counts_0_address0 = 64'd0;
    end else begin
        level_counts_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        level_counts_0_ce0 = 1'b1;
    end else begin
        level_counts_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        level_counts_0_d0 = cnt_reg_166;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_counts_0_d0 = 64'd1;
    end else begin
        level_counts_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((icmp_ln24_fu_257_p2 == 1'd1) & (trunc_ln39_fu_274_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        level_counts_0_we0 = 1'b1;
    end else begin
        level_counts_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        level_counts_1_ce0 = 1'b1;
    end else begin
        level_counts_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln24_fu_257_p2 == 1'd1) & (trunc_ln39_fu_274_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        level_counts_1_we0 = 1'b1;
    end else begin
        level_counts_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        level_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        level_d0 = grp_bfs_Pipeline_loop_neighbors_fu_206_level_d0;
    end else begin
        level_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        level_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        level_we0 = grp_bfs_Pipeline_loop_neighbors_fu_206_level_we0;
    end else begin
        level_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        nodes_ce0 = 1'b1;
    end else begin
        nodes_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'd0 == and_ln39_fu_303_p2) & (icmp_ln24_fu_257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln24_fu_257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln39_fu_303_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln25_fu_321_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln28_fu_342_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_bfs_Pipeline_loop_neighbors_fu_206_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_cast_fu_245_p2 = (trunc_ln21_1_fu_235_p1 + 4'd1);

assign add_ln21_fu_239_p2 = (horizon_fu_76 + 64'd1);

assign and_ln39_fu_303_p2 = (icmp_ln39_fu_292_p2 & icmp_ln21_fu_298_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign edges_0_address0 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address0;

assign edges_0_address1 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_address1;

assign edges_0_ce0 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce0;

assign edges_0_ce1 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_0_ce1;

assign edges_1_address0 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address0;

assign edges_1_address1 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_address1;

assign edges_1_ce0 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce0;

assign edges_1_ce1 = grp_bfs_Pipeline_loop_neighbors_fu_206_edges_1_ce1;

assign empty_fu_251_p2 = (trunc_ln21_fu_231_p1 + 8'd1);

assign grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start = grp_bfs_Pipeline_loop_neighbors_fu_206_ap_start_reg;

assign icmp_ln21_fu_298_p2 = (($signed(add_ln21_reg_386) < $signed(64'd10)) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_257_p2 = ((n_reg_180 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_321_p2 = ((zext_ln25_fu_317_p1 == horizon_1_reg_381) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_342_p2 = ((tmp_begin_fu_326_p1 < tmp_end_fu_331_p4) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_292_p2 = ((cnt_reg_166 != 64'd0) ? 1'b1 : 1'b0);

assign level_counts_1_address0 = zext_ln39_fu_286_p1;

assign level_counts_1_d0 = cnt_reg_166;

assign lshr_ln_fu_277_p4 = {{add_ln21_cast_reg_392[3:1]}};

assign n_1_fu_263_p2 = (n_reg_180 + 9'd1);

assign nodes_address0 = zext_ln24_reg_410;

assign select_ln28_fu_354_p3 = ((targetBlock_reg_449[0:0] == 1'b1) ? cnt_1_0_loc_fu_84 : cnt_2_0_loc_fu_80);

assign sext_ln25_fu_313_p0 = level_q0;

assign sext_ln25_fu_313_p1 = sext_ln25_fu_313_p0;

assign tmp_begin_fu_326_p1 = nodes_q0[63:0];

assign tmp_end_fu_331_p4 = {{nodes_q0[127:64]}};

assign trunc_ln21_1_fu_235_p1 = horizon_fu_76[3:0];

assign trunc_ln21_fu_231_p1 = horizon_fu_76[7:0];

assign trunc_ln39_fu_274_p1 = horizon_fu_76[0:0];

assign zext_ln24_fu_269_p1 = n_reg_180;

assign zext_ln25_fu_317_p1 = $unsigned(sext_ln25_fu_313_p1);

assign zext_ln39_fu_286_p1 = lshr_ln_fu_277_p4;

always @ (posedge ap_clk) begin
    zext_ln24_reg_410[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //bfs
